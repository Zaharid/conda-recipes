# HG changeset patch
# User Zahari Kassabov <kassabov@to.infn.it>
# Date 1450960924 -3600
#      Thu Dec 24 13:42:04 2015 +0100
# Branch lhapdfv6
# Node ID a4eb61aed477fbc15b878db07895a9e9fd20b6cd
# Parent  ff182a2a0e408cc5c2743a1ecc2639db0a9516cc
Python 3 compatibility

There is no need to read files in binary mode (should be text files)
and urlib is different in Python 2 and 3 (better to use requests?)

diff -r ff182a2a0e40 -r a4eb61aed477 lhapdf.in
--- lhapdf.in	Tue Dec 22 12:11:48 2015 +0000
+++ lhapdf.in	Thu Dec 24 13:42:04 2015 +0100
@@ -204,7 +204,7 @@
     database = []
     try:
         import csv
-        csv_file = open(filepath, 'rb')
+        csv_file = open(filepath, 'r')
         logging.debug('Reading %s' % filepath)
         reader = csv.reader(csv_file, delimiter=' ', skipinitialspace=True, strict=True)
         for row in reader:
@@ -246,7 +246,7 @@
         metadata_filepath = os.path.join(path, subdir, subdir + os.extsep + 'info')
         if os.path.isfile(metadata_filepath):
             try:
-                metadata_file = open(metadata_filepath, 'rb')
+                metadata_file = open(metadata_filepath, 'r')
                 logging.debug('Reading %s' % metadata_filepath)
 
                 # Attempt to find PDF version from YAML file
@@ -297,11 +297,15 @@
 
     else: # URL
         url = source
-        import urllib2 as urllib
         try:
-            u = urllib.urlopen(url)
-            file_size = int(u.info().getheaders('Content-Length')[0])
-        except urllib.URLError:
+            from urllib2 import urlopen, URLError
+        except ImportError:
+            from urllib.request import urlopen
+            from urllib.error import URLError
+        try:
+            u = urlopen(url)
+            file_size = int(u.info()['Content-Length'][0])
+        except URLError:
             e = sys.exc_info()[1]
             logging.error('Unable to download %s' % url)
             return False
@@ -331,7 +335,7 @@
                     status  = chr(13) + '%s: ' % os.path.basename(url)
                     status += r'%s [%3.1f%%]' % (convertBytes(file_size_dl).rjust(10), file_size_dl * 100. / file_size)
                     sys.stdout.write(status+' ')
-            except urllib.URLError:
+            except URLError:
                 e = sys.exc_info()[1]
                 logging.error('Error during download: ', e.reason)
                 return False
