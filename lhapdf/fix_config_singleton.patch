# HG changeset patch
# User Zahari Kassabov <kassabov@to.infn.it>
# Date 1516896984 0
#      Thu Jan 25 16:16:24 2018 +0000
# Branch lhapdfv6
# Node ID eb98b93895631c8608576f07e399be6b8f10faec
# Parent  31bfcf78ea09a133d9ea6e380853623d31704ab3
Fix config path

Apparently the _cfg variable can be defined twice if it is both
imported and dynamically linked. Defining the member function in the
.cc should fix that.

diff -r 31bfcf78ea09 -r eb98b9389563 include/LHAPDF/Config.h
--- include/LHAPDF/Config.h	Sun Nov 26 20:55:26 2017 +0100
+++ include/LHAPDF/Config.h	Thu Jan 25 16:16:24 2018 +0000
@@ -27,15 +27,7 @@
     ///
     /// @note The LHAPDF system is responsible for deletion of the returned
     /// object. Do NOT delete it yourself!
-    static Config& get() {
-      static Config _cfg; //< Could we use the Info(path) constructor for automatic init-once behaviour?
-      // Test for emptiness and only initialise *once*:
-      if (_cfg._metadict.empty()) {
-        std::string confpath = findFile("lhapdf.conf");
-        if (!confpath.empty()) _cfg.load(confpath);
-      }
-      return _cfg;
-    }
+    static Config& get();
 
     //@}
 
diff -r 31bfcf78ea09 -r eb98b9389563 src/Config.cc
--- src/Config.cc	Sun Nov 26 20:55:26 2017 +0100
+++ src/Config.cc	Thu Jan 25 16:16:24 2018 +0000
@@ -9,6 +9,16 @@
 
 namespace LHAPDF {
 
+  Config& Config::get() {
+      static Config _cfg; //< Could we use the Info(path) constructor for automatic init-once behaviour?
+      // Test for emptiness and only initialise *once*:
+      if (_cfg._metadict.empty()) {
+        std::string confpath = findFile("lhapdf.conf");
+        if (!confpath.empty()) _cfg.load(confpath);
+      }
+      return _cfg;
+  }
+
 
   Config::~Config() {
     // Emit citation information at the end of the job, via the Config destructor
